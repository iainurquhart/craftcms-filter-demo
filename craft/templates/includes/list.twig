<h2>List</h2>

{% set params = {
	section: 'jeeps',
} %}

{#
	Category relationships will all be stored in this
	`relatedTo` array. It will eventually look like:
	```
		[
			{field: 'color', targetElement: color},
			{field: 'options', targetElement: options}
		]
	```
#}
{% set relatedTo = [] %}

{#
	Color category
	`targetElement` can accept a comma-separated string or an array of ids.
	In this case, it's getting an array from `craft.request.param`.
#}
{% set color = craft.request.getParam('color') %}
{% if color %}
	{% set relation = {field: 'color', targetElement: color} %}
	{% set relatedTo = relatedTo | merge([relation]) %}
{% endif %}

{#
	Options category
	Since all options must be present on an entry we need to add
	'and' to the front of the options id array so it looks something
	like this:
	```
		['and', 1, 2]
	```
	The 'and' specifies that option id 1 and option id 2 must
	both be applied to an entry. It could be 'or', but its absence
	implies 'or'.
#}
{% set options = craft.request.getParam('options') %}
{% if options %}
	{% set options = ['and'] | merge(options) %}
	{% set relation = {field: 'options', targetElement: options} %}
	{% set relatedTo = relatedTo | merge([relation]) %}
{% endif %}

{#
	Create the `relatedTo` property on `params` if needed.
	It could look something like this: (Notice the 'and'.)
	```
		relatedTo: [
			'and',
			{field: 'color', targetElement: color},
			{field: 'options', targetElement: options}
		]
	```
#}
{% if relatedTo | length %}
	{% set relations = ['and'] | merge(relatedTo) %}
	{% set params = params | merge({relatedTo: relations}) %}
{% endif %}


{% for entry in craft.entries(params) %}

	<div class="panel panel-default">

		<div class="panel-heading">
			<h3 class="panel-title">{{ entry.title }}</h3>
		</div>

		<div class="panel-body">

			<img src="{{ entry.image.first.url }}">

			<p>
				<label>Mileage:</label> {{ entry.mileage }}

				<br><label>Transmission:</label> {{ entry.transmission }}

				<br><label>Color:</label> {{ entry.color.first }}

				{% set options = [] %}
				{% for option in entry.options %}
					{% set options = options | merge([option.title]) %}
				{% endfor %}

				<br><label>Options:</label> {{ options | join(', ') }}
			</p>

		</div>
	</div>

{% endfor %}
